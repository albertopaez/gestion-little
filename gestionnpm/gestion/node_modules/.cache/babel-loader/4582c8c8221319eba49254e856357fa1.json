{"ast":null,"code":"import { createStore\n/* compose, */\n, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction'; // import { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n// import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\n// import { isDevelopment } from './constants/index'\n\nimport rootReducer from './reducers';\nconst middlewares = [thunk];\nconst enhancers = []; // const persistsConfig = {\n//   key: 'root',\n//   storage,\n//   debug: isDevelopment,\n//   stateReconciler: autoMergeLevel2,\n//   whitelist: ['provinces']\n// }\n\nexport default function configureStore(initialState) {\n  // if (process.env.NODE_ENV === 'develop') {\n  //   const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  //   if (typeof devToolsExtension === 'function') {\n  //     enhancers.push(devToolsExtension())\n  //   }\n  // }\n  const composeEnhancers = composeWithDevTools({// options like actionSanitizer, stateSanitizer\n  }); // const persistedReducer = persistReducer(persistsConfig, rootReducer)\n\n  const store = createStore( // persistedReducer,\n  rootReducer, initialState, composeEnhancers(applyMiddleware(...middlewares), ...enhancers)); // const persistor = persistStore(store)\n  // return { store, persistor };\n\n  return store;\n}","map":{"version":3,"sources":["/home/nika/Escritorio/Proyectos/gestion/src/store.js"],"names":["createStore","applyMiddleware","thunk","composeWithDevTools","rootReducer","middlewares","enhancers","configureStore","initialState","composeEnhancers","store"],"mappings":"AAAA,SAASA;AAAa;AAAtB,EAAqCC,eAArC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,8CAApC,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,WAAW,GAAG,CAClBH,KADkB,CAApB;AAIA,MAAMI,SAAS,GAAG,EAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AAEnD;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAMC,gBAAgB,GAAGN,mBAAmB,CAAC,CAC3C;AAD2C,GAAD,CAA5C,CAVmD,CAcnD;;AAEA,QAAMO,KAAK,GAAGV,WAAW,EACvB;AACAI,EAAAA,WAFuB,EAGvBI,YAHuB,EAIvBC,gBAAgB,CACdR,eAAe,CAAC,GAAGI,WAAJ,CADD,EAEd,GAAGC,SAFW,CAJO,CAAzB,CAhBmD,CA0BnD;AAEA;;AACA,SAAOI,KAAP;AACD","sourcesContent":["import { createStore, /* compose, */ applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction'\n// import { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n// import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\n// import { isDevelopment } from './constants/index'\nimport rootReducer from './reducers';\n\nconst middlewares = [\n  thunk\n] \n\nconst enhancers = []\n \n// const persistsConfig = {\n//   key: 'root',\n//   storage,\n//   debug: isDevelopment,\n//   stateReconciler: autoMergeLevel2,\n//   whitelist: ['provinces']\n// }\n\nexport default function configureStore(initialState) {\n\n  // if (process.env.NODE_ENV === 'develop') {\n  //   const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  //   if (typeof devToolsExtension === 'function') {\n  //     enhancers.push(devToolsExtension())\n  //   }\n  // }\n\n  const composeEnhancers = composeWithDevTools({\n    // options like actionSanitizer, stateSanitizer\n  });\n\n  // const persistedReducer = persistReducer(persistsConfig, rootReducer)\n\n  const store = createStore(\n    // persistedReducer,\n    rootReducer,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(...middlewares),\n      ...enhancers,\n    ),\n  )\n\n  // const persistor = persistStore(store)\n\n  // return { store, persistor };\n  return store;\n}"]},"metadata":{},"sourceType":"module"}